buildscript {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap'}
        maven { url "https://dl.bintray.com/kotlin/kotlin-dev/" }
        maven { url 'https://dl.bintray.com/jetbrains/kotlin-native-dependencies' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
	repositories {
        mavenLocal()
		jcenter()
		maven { url 'https://dl.bintray.com/kotlin/kotlin-eap'}
		maven { url "https://dl.bintray.com/kotlin/kotlin-dev/" }
		maven { url "https://dl.bintray.com/kotlin/kotlinx/" }
		maven { url 'https://dl.bintray.com/touchlabpublic/kotlin' }
		maven { url "https://dl.bintray.com/soywiz/soywiz" }

	}
}


apply plugin: 'kotlin-multiplatform'



kotlin {


    sourceSets {
        all {
            languageSettings {
                //enableLanguageFeature('InlineClasses') // language feature name
                //useExperimentalAnnotation('kotlin.ExperimentalUnsignedTypes') // annotation FQ-name
                //progressiveMode = true // false by default
            }
        }
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    			implementation "com.soywiz:klogger:$klogger_version"
            }
        }

		nativeCommonMain {
		    dependsOn commonMain
			dependencies {
			    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:$kotlin_coroutines_version"
			}
		}

		jvmMain {
		    dependsOn commonMain
			dependencies {
				implementation 'org.jetbrains.kotlin:kotlin-stdlib'
				implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
			}
		}
        unixMain

        configure([linuxMain, macMain]) {
            dependsOn unixMain
        }
        configure([unixMain, windowsMain]) {
            dependsOn nativeCommonMain
        }

        commonTest {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$kotlin_coroutines_version"
                implementation "org.jetbrains.kotlin:kotlin-test-common"
                implementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
            }
        }

		nativeCommonTest{
			dependencies {
				implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:$kotlin_coroutines_version"
			}
		}

        jvmTest {
        	dependsOn commonTest
            dependencies {
            	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }

        configure([linuxTest, windowsTest, macTest]) {
            dependsOn nativeCommonTest
        }
    }

    targets {
        fromPreset(presets.jvm, 'jvm')
        fromPreset(presets.linuxX64, 'linux')
        fromPreset(presets.mingwX64, 'windows')
        fromPreset(presets.macosX64, 'mac')

		configure([linux, windows, mac]) {
			compilations.main.outputKinds( 'EXECUTABLE')
		}
    }
}




